---
title: "RCBD"
format: html
---

# Introduction  
The goals of this exercise are to:  
- Create an analytical workflow for an **RCBD** with **random blocks**, from data import through publication-ready plot  
- Understand each of its components  

Note: this is a mixed effect model because blocks is random factor, and all other factors are fixed factors.

# a) Setup  
Here is where we load the packages we will use.  
```{r setup}

#install.packages("broom.mixed")
#install.packages("lme4")

# Loading packages
library(tidyverse) # for data wrangling and plotting
library(car) # for Anova function
library(lme4)
library(broom) # for model residuals extraction
library(broom.mixed)
library(emmeans) # for model mean extraction
library(multcomp) # for pairwise comparison letter display
```

**IMPORTANT NOTE**:  
We are using in this exercise the same data set as the one used for the CRD exercise. This is only for **teaching purposes!!**  

In your own analysis, you should always analyze a given designed study data set based on the design that it was implemented with.  
You should NOT analyze a given designed study with a different design than what it was implemented with.  

This is not an option!  

```{r data import, warning=FALSE, message=FALSE}
rcbd_df <- read_csv("../data/wheat_nk_balkh.csv")

rcbd_df
```

# b) EDA tables  
```{r summary}
summary(rcbd_df)
```

```{r glimpse}
glimpse(rcbd_df)
```
# c) Wrangling
```{r rcbd_dfw}
rcbd_dfw <- rcbd_df %>%
  mutate(rep = factor(rep),
         nrate_kgha = factor(nrate_kgha),
         krate_kgha = factor(krate_kgha) 
         ) %>%
  mutate(trtname = paste0(nrate_kgha,"+",krate_kgha))

rcbd_dfw
```


```{r rcbd_dfw}
summary(rcbd_dfw)
```
Number of replicates: 4  
Number o treatments: 3 N rates x 3 K rates = 9  
Number of observations: 4 x 9 = 36  
Yield: from 2795 to 7445 kg/ha  

# d) EDA plots  
```{r n boxplot}
ggplot(rcbd_dfw, aes(x = nrate_kgha, 
                    y = yield_kgha,
                    color = nrate_kgha)) +
  geom_boxplot() +
  geom_jitter() +
  theme(legend.position = "none")
```

```{r k boxplot}
ggplot(rcbd_dfw, aes(x = krate_kgha, 
                    y = yield_kgha,
                    color = krate_kgha)) +
  geom_boxplot() +
  geom_jitter() +
  theme(legend.position = "none")
```

```{r nk boxplot for nitrogen*potassium interaction}
ggplot(rcbd_dfw, aes(x = nrate_kgha, 
                    y = yield_kgha,
                    color = nrate_kgha)) +
  geom_boxplot() +
  geom_jitter() +
  facet_grid(.~krate_kgha) +
  theme(legend.position = "none")
```

# e) Statistical model  
## Mixed-effect modeling in R  

Now that we are going to treat **blocks as random effect**, we will need to use a different function.  

That is because `lm()` only handles one variance component (the error itself).  

To account for more than one variance component (i.e., random effects and error), we can use function `lmer()` from package `lme4`. Function: lme4::lmer()


```{r model for mixed-effect model}
# Changing to sum-to-zero contrast
options(contrasts = c("contr.sum", "contr.poly"))

# Model fitting
rcbd_mix_mod <- lme4::lmer(yield_kgha ~ nrate_kgha*krate_kgha + #We specify the interaction of the fixed effects first
                           (1|rep), #Syntax for random effect "rep" i.e., block effect in this case
                           data = rcbd_dfw
                           )

# Summary
summary(rcbd_mix_mod)
```

We use "REML" algorithm for mixed effects model.

Notice now how the `summary()` above has a new section for **random effects**.  

The variance attributed to blocks is 59932, and that still left in the residual error is 376416. 

Therefore, blocks are responsible for 59932 / (59932 + 376416) = **14% of the total noise** in this model. 

## Multi-location analysis of mixed-effects model

For multi-location analysis, the large hierarchy factor is "location" (not included in the excel file), and lower hierarchy factor is "rep" (i.e., "block")

```{r model for mixed-effect model}
# Changing to sum-to-zero contrast
options(contrasts = c("contr.sum", "contr.poly"))

# Model fitting
rcbd_mix_multiloc_mod <- lme4::lmer(yield_kgha ~ nrate_kgha*krate_kgha + #We specify the interaction of the fixed effects first
                           (1|location/rep), #(1|location/rep) means reps/blocks are nested inside location. At first, we specify the factor that has higher hierarchy i.e., location, then the factor with lower hierarchy i.e., rep is specified afterwards
                           data = rcbd_dfw
                           )

# Summary
summary(rcbd_mix_multiloc_mod)
```


# f) ANOVA table  
```{r ANOVA}
Anova(rcbd_mix_mod, type=3)
```

Notice how this table is now titled "Analysis of Deviance Table". That's because we are using REML instead of mean squares.  

Also notice how rep (i.e., block in this case) does not appear in the ANOVA table above. That's because it only displays **fixed effects**.

As before, since the interaction is significant here, we should extract means and perform pairwise comparisons for the interaction term.

Before we do that, let's check our model assumptions. Remember, a model is only valid for inference (i.e., means and pwc) IF it fulfills the linear model assumptions.  

# g) Linear model assumptions  
## Extracting residuals
First, let's extract our model residuals, and also create studentized residuals.  

```{r rcbd_mix_resid}
library(broom.mixed) #for mixed effects model

rcbd_mix_resid <- broom.mixed::augment(rcbd_mix_mod) %>%
  mutate(.studresid=rstudent(rcbd_mix_mod))

rcbd_mix_resid
```

Now, let's recap the linear model assumptions:  

- Independence (no pattern)  
- Variance homogeneity (homoscedasticity)  
- Normality  
- Outlier detection (< -3 or > 3)  

One difference in mixed models is that the 3 first assumptions (i.e., independence, homoscedasticity/homogeneous variance, normality) are also applied to the **random effect (block/rep, in this case)**, so we need to check it for them as well.  

My note: For mixed-effects model, the first 3 assumptions (i.e., independence, homoscedasticiy/homogeneous variance, normality) applies for the random effect (block/rep, in this case). So, we need to check these assumptions for "rep" (random effect) as well.

### Random effects are iid ~ N(0,var_a)  
```{r randeff_rep}
randeff_rep <- ranef(rcbd_mix_mod)[[1]]

randeff_rep
```

For random effects with so few levels (i.e., 4 since that's the number of blocks), the QQ plot is one of the only ways to check for assumptions on random effects.  

```{r QQ plot for random effects i.e., block/rep in this case}
ggplot(randeff_rep, aes(sample=`(Intercept)`))+
  stat_qq(  shape = 21,
            fill = "purple", 
            size = 3,
            alpha = .7
  )+
  stat_qq_line()+
  theme_bw() +
  labs(x = "Theoretical quantile",
       y = "Sample quantile")
```
We have only 4 blocks. So, we have only 4 datapoints associated with the blocks to check for the normality assumption of the random effect i.e., block.

Nothing to worry here, especially since we only have 4 points.  

### Within-group errors are iid ~ N(0, var_e)  
```{r, message=FALSE, warning=FALSE}
ggplot(rcbd_mix_resid, aes(x=.fitted, y=.studresid))+
  geom_hline(yintercept = 0, color="red")+
  geom_point(shape = 21,
             fill = "purple", 
             size = 3,
             alpha = .7)+
  geom_smooth()+
  geom_hline(yintercept = c(-3,3), color = "red")+
  theme_bw() +
  labs(x = "Fitted values",
       y = "Studentized residuals")
```

- **Independence**: seems like there is a potential pattern, but since error bands comprise 0 on the y-axis, I'm not worried.  

- **Variance homoscedastic**: seems constant across the x-axis.   

- **Outliers**: nothing outside the -3,3 boundaries. *From the fitted vs. residual plot, we see that all residuals fall within [-3, 3] interval. Hence, there is no outlier present to skew the model interpretation.*  


```{r QQ plot for residual}
ggplot(rcbd_mix_resid, aes(sample=.studresid))+
  stat_qq(  shape = 21,
            fill = "purple", 
            size = 3,
            alpha = .7
  )+
  stat_qq_line()+
  labs(x = "Theoretical quantile",
       y = "Sample quantile")+
  theme_bw()
```

In the QQ plot, the residuals fall closely around the QQ line with no strong curvature pattern or heavy-tail deviations. 


```{r density plot}
ggplot(rcbd_mix_resid, aes(x=.studresid))+
  geom_density(color = "black",
               fill = "purple",
               alpha = .7)+
  scale_x_continuous(breaks = c(-3,0,3), limits = c(-3,3))+
  theme_bw()

```

The density plot appears to have a normal distribution even though the tails are a little bit off. 

Hence, the residual normality assumption appears to hold.

- **Normality**: residuals seem normal.  

# h) Model means  
The next step in the workflow is extracting the model means.  

Remember that it is at this level that we establish the hierarchy of how our pairwise comparisons will be performed.  

Let's extract it by comparing everything to everything else.

```{r interaction means all}
rcbd_mix_means_all <- emmeans(rcbd_mix_mod, ~nrate_kgha:krate_kgha)

rcbd_mix_means_all
```

# i) Pairwise comparisons  
Now that we extracted means, let's perform pairwise comparisons among them.  

```{r interaction pwc all}
rcbd_mix_cld_all <- cld(rcbd_mix_means_all, 
                   reversed=T, 
                   adjust="none",
               Letters=letters)

rcbd_mix_cld_all
```

Let's do some light wrangling here to be able to plot these.  

```{r selected pwc}
rcbd_mix_cld_selected <- rcbd_mix_cld_all %>%
  as.data.frame() %>%
  mutate(letter=trimws(.group)) %>%
  mutate(trtname = paste0(nrate_kgha,"+",krate_kgha))

rcbd_mix_cld_selected
```

# g) Final plot  
Let's plot our results, including both **raw data** (for allowing our audience to inspect data distribution) and **statistical model summary (i.e., letter separation)** for inference purposes.    
Let's make this plot publication ready.  

```{r rcbd final plot}
ggplot(mapping = aes(fill = trtname))+
  # Raw data and boxplots  
  geom_boxplot(data = rcbd_dfw,
               aes(x = trtname, y = yield_kgha),
               alpha = .8) +
  geom_jitter(data = rcbd_dfw,
               aes(x = trtname, y = yield_kgha),
              shape = 21,
              size = 3,
              alpha = .6) +
  # Adding letters
  geom_label(data = rcbd_mix_cld_selected,
            aes(x = trtname, y = emmean, label = letter),
            fill = "white") +
  labs(x = "N rate + K rate (kg/ha)",
       y = "Yield (kg/ha)") +
  scale_fill_viridis_d() +
  theme(panel.grid.major.y = element_blank(),
        panel.grid.minor.y = element_blank(),
        legend.position = "none")

ggsave("../output/rcbd_mix_means.png",
       width = 8,
       height = 5)
```


# Assignment - comparing blocks fixed vs. random  



